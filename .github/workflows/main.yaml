name: Builder
run-name: ${{ github.actor }} is building
on: [push]
jobs:
  build-bookworm:
    runs-on: ubuntu-latest
    container: debian:bookworm
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Install dependencies
        run: |
          apt-get update
          apt-get install -y git gcc g++ curl zip unzip tar ninja-build pkg-config cmake python3 autoconf automake autoconf-archive
      - name: Install vcpkg
        run: |
          git clone https://github.com/microsoft/vcpkg.git
          ./vcpkg/bootstrap-vcpkg.sh
      - name: Export GitHub Actions cache environment variables
        uses: actions/github-script@v7
        with:
          script: |
            core.exportVariable('ACTIONS_CACHE_URL', process.env.ACTIONS_CACHE_URL || '');
            core.exportVariable('ACTIONS_RUNTIME_TOKEN', process.env.ACTIONS_RUNTIME_TOKEN || '');
      - name: Build
        run: |
          cmake --preset vcpkg -DVCPKG_TARGET_TRIPLET=x64-linux-release -DCMAKE_BUILD_TYPE=RelWithDebInfo
          cmake --build build
        env:
          VCPKG_ROOT: ${{ github.workspace }}/vcpkg
          VCPKG_BINARY_SOURCES: "clear;x-gha,readwrite"
      - name: Save binary
        uses: actions/upload-artifact@v4
        with:
          name: optift-bookworm
          path: build/optift
  build-windows:
    runs-on: windows-latest
    env:
      VCPKG_ROOT: C:/vcpkg
      VCPKG_BINARY_SOURCES: "clear;x-gha,readwrite"
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - uses: ilammy/msvc-dev-cmd@v1
      - name: Export GitHub Actions cache environment variables
        uses: actions/github-script@v7
        with:
          script: |
            core.exportVariable('ACTIONS_CACHE_URL', process.env.ACTIONS_CACHE_URL || '');
            core.exportVariable('ACTIONS_RUNTIME_TOKEN', process.env.ACTIONS_RUNTIME_TOKEN || '');
      - name: Install pkgconf via vcpkg
        run: |
          C:/vcpkg/vcpkg.exe add port pkgconf
      - name: Build
        run: |
          cmake --preset vcpkg -DCMAKE_BUILD_TYPE=Release -G "Ninja"
          cmake --build build
      - name: Save binary
        uses: actions/upload-artifact@v4
        with:
          name: optift-windows
          path: |
            build/optift.exe
            build/*.dll
  build-macos:
    runs-on: macos-latest
    env:
      VCPKG_ROOT: ${{ github.workspace }}/vcpkg
      VCPKG_BINARY_SOURCES: "clear;x-gha,readwrite"
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Install dependencies
        run: |
          brew install ninja pkg-config
          
      - name: Install vcpkg
        run: |
          git clone https://github.com/microsoft/vcpkg.git
          ./vcpkg/bootstrap-vcpkg.sh
          
      - name: Export GitHub Actions cache environment variables
        uses: actions/github-script@v7
        with:
          script: |
            core.exportVariable('ACTIONS_CACHE_URL', process.env.ACTIONS_CACHE_URL || '');
            core.exportVariable('ACTIONS_RUNTIME_TOKEN', process.env.ACTIONS_RUNTIME_TOKEN || '');
            
      - name: Build
        run: |
          cmake --preset vcpkg -DCMAKE_BUILD_TYPE=Release -G "Ninja"
          cmake --build build
          
      - name: Save binary
        uses: actions/upload-artifact@v4
        with:
          name: optift-macos
          path: build/optift
